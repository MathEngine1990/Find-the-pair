// utils/TextManager.js - –ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º
window.TextManager = class TextManager {
  constructor(scene) {
    this.scene = scene;
    this.cache = new Map();
    this.updateDimensions();
  }

  updateDimensions() {
    const scale = this.scene.scale;
    this.W = scale.width;
    this.H = scale.height;
    this.DPR = Math.min(window.devicePixelRatio || 1, 2);
    this.isMobile = this.W < 768 || this.H < 600;
    this.isPortrait = this.H > this.W;
    this.baseSize = Math.min(this.W, this.H);
    
    // –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤
    this.cache.clear();
  }

  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
   * @param {string} type - –¢–∏–ø —Ç–µ–∫—Å—Ç–∞ (hudText, title, button, stat, etc.)
   * @param {object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
   * @returns {number} - –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
   */
  getSize(type, options = {}) {
    const cacheKey = `${type}_${this.W}_${this.H}`;
    if (this.cache.has(cacheKey) && !options.forceRecalc) {
      return this.cache.get(cacheKey);
    }

    const config = TEXT_PRESETS[type] || TEXT_PRESETS.default;
    
    // –ë–∞–∑–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç
    let size;
    if (config.method === 'viewport') {
      // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ viewport (–ª—É—á—à–µ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
      size = this.baseSize * config.scale;
    } else if (config.method === 'height') {
      // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ—Ç—ã (–ª—É—á—à–µ –¥–ª—è HUD)
      size = this.H * config.scale;
    } else {
      // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —à–∏—Ä–∏–Ω—ã (–ª—É—á—à–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫)
      size = this.W * config.scale;
    }

    // –ú–æ–±–∏–ª—å–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
    if (this.isMobile && config.mobileScale) {
      size *= config.mobileScale;
    }

    // –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª—è –∞–ª—å–±–æ–º–Ω–æ–π –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    if (!this.isPortrait && config.landscapeScale) {
      size *= config.landscapeScale;
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
    const min = config.min || 10;
    const max = config.max || 100;
    size = Phaser.Math.Clamp(Math.round(size), min, max);

    // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    this.cache.set(cacheKey, size);
    return size;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å—Ç–∏–ª—å —Ç–µ–∫—Å—Ç–∞
   */
  getStyle(type, overrides = {}) {
    const preset = TEXT_PRESETS[type] || TEXT_PRESETS.default;
    
    return {
      fontFamily: preset.font || window.THEME.font,
      fontSize: this.getSize(type) + 'px',
      color: preset.color || '#FFFFFF',
      fontStyle: preset.style || 'normal',
      stroke: preset.stroke || null,
      strokeThickness: preset.strokeThickness || 0,
      shadow: preset.shadow || null,
      align: preset.align || 'center',
      wordWrap: preset.wordWrap ? { 
        width: this.W * (preset.wordWrap.widthFactor || 0.9) 
      } : null,
      ...overrides
    };
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç
   */
  createText(x, y, content, type, overrides = {}) {
    const style = this.getStyle(type, overrides);
    const text = this.scene.add.text(x, y, content, style);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–Ω—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    if (TEXT_PRESETS[type]?.autoShadow) {
      const shadowSize = Math.max(2, Math.round(this.getSize(type) * 0.05));
      text.setShadow(shadowSize, shadowSize, '#000000', 8, false, true);
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π stroke –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤
    if (TEXT_PRESETS[type]?.autoStroke) {
      const strokeSize = Math.max(2, Math.round(this.getSize(type) * 0.08));
      text.setStroke('#000000', strokeSize);
    }

    return text;
  }

  /**
   * –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—Å—Ç –ø—Ä–∏ resize
   */
  updateText(textObject, type) {
    if (!textObject || !textObject.scene) return;
    
    const newSize = this.getSize(type);
    textObject.setFontSize(newSize);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º stroke/shadow –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    if (TEXT_PRESETS[type]?.autoStroke) {
      const strokeSize = Math.max(2, Math.round(newSize * 0.08));
      textObject.setStroke('#000000', strokeSize);
    }
  }
};

// ============================================
// –ü–†–ï–°–ï–¢–´ –¢–ï–ö–°–¢–ê - –ï–î–ò–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö –ü–†–ê–í–î–´
// ============================================
window.TEXT_PRESETS = {
  // === –ó–ê–ì–û–õ–û–í–ö–ò ===
  titleLarge: {
    method: 'height',
    scale: 0.055,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.06 (–±—ã–ª–æ —Å–ª–∏—à–∫–æ–º –∫—Ä—É–ø–Ω–æ)
    min: 22,
    max: 42,
    mobileScale: 1.15,   // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 1.2
    landscapeScale: 0.9,
    font: window.THEME?.fontTitle,
    color: window.THEME?.colors?.titlePrimary || '#FFE066',
    style: 'bold',
    autoStroke: true,
    autoShadow: true,
    // üî• –ù–û–í–û–ï: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–Ω–∏ –∏ –æ–±–≤–æ–¥–∫–∏
    shadowConfig: window.THEME?.shadows?.title,
    strokeConfig: window.THEME?.strokes?.titleThick
  },

  titleMedium: {
    method: 'height',
    scale: 0.040,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.045
    min: 18,
    max: 32,
    mobileScale: 1.1,
    font: window.THEME?.fontTitle,
    color: window.THEME?.colors?.titleSecondary || '#4ECDC4',
    style: 'bold',
    autoShadow: true,
    shadowConfig: window.THEME?.shadows?.text
  },

  titleSmall: {
    method: 'height',
    scale: 0.030,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.035
    min: 16,
    max: 24,
    mobileScale: 1.1,
    font: window.THEME?.fontTitle,
    color: window.THEME?.colors?.textPrimary || '#FFFFFF',
    style: 'bold'
  },

  // === HUD –≠–õ–ï–ú–ï–ù–¢–´ ===
  hudText: {
    method: 'height',
    scale: 0.024,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.025
    min: 14,
    max: 19,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 20
    mobileScale: 1.25,  // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 1.3
    font: window.THEME?.font,
    color: window.THEME?.colors?.textPrimary || '#FFFFFF',
    style: 'bold'
  },

  hudTimer: {
    method: 'height',
    scale: 0.026,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.028
    min: 15,
    max: 20,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 22
    mobileScale: 1.25,
    font: window.THEME?.font,
    color: window.THEME?.colors?.hudTimer || '#4ECDC4',
    style: 'bold'
  },

  // === –ö–ù–û–ü–ö–ò ===
  buttonText: {
    method: 'viewport',
    scale: 0.016,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.018
    min: 14,
    max: 22,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 24
    mobileScale: 1.3,
    font: window.THEME?.fontButton,
    color: window.THEME?.colors?.textPrimary || '#FFFFFF',
    style: 'bold'
  },

  buttonIcon: {
    method: 'viewport',
    scale: 0.022,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.025
    min: 18,
    max: 28,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 32
    mobileScale: 1.25,
    font: window.THEME?.fontButton,
    style: 'bold'
  },

  // üî• –ù–û–í–û–ï: –ù–æ–º–µ—Ä–∞ —É—Ä–æ–≤–Ω–µ–π –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö
  levelNumber: {
    method: 'viewport',
    scale: 0.045,        // üéØ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
    min: 32,
    max: 64,
    mobileScale: 1.1,
    landscapeScale: 0.95,
    font: window.THEME?.fontButton,
    color: window.THEME?.colors?.levelNumber || '#1A1A2E',
    style: 'bold',
    autoStroke: true,
    autoShadow: true,
    // üî• –ë–µ–ª–∞—è –æ–±–≤–æ–¥–∫–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞ —Å –æ—Ä–∞–Ω–∂–µ–≤—ã–º —Ñ–æ–Ω–æ–º
    strokeConfig: window.THEME?.strokes?.levelNumber,
    shadowConfig: window.THEME?.shadows?.levelNumber
  },

  // === –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===
  statLabel: {
    method: 'height',
    scale: 0.020,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.022
    min: 13,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 14
    max: 17,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 18
    mobileScale: 1.15,
    font: window.THEME?.font,
    color: window.THEME?.colors?.textSecondary || '#B8C5D6'
  },

  statValue: {
    method: 'height',
    scale: 0.018,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.020
    min: 11,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 12
    max: 15,            // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 16
    mobileScale: 1.15,
    font: window.THEME?.font,
    color: window.THEME?.colors?.statsAccuracy || '#A8DADC'
  },

  // üî• –ù–û–í–û–ï: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥ –∫–Ω–æ–ø–∫–∞–º–∏ —É—Ä–æ–≤–Ω–µ–π
  levelStats: {
    method: 'viewport',
    scale: 0.012,        // üéØ –ú–µ–ª–∫–∏–π, –Ω–æ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π
    min: 10,
    max: 14,
    mobileScale: 1.2,
    font: window.THEME?.font,
    color: window.THEME?.colors?.statsAccuracy || '#A8DADC',
    style: 'normal'
  },

  // === –ó–í–Å–ó–î–´ ===
  stars: {
    method: 'viewport',
    scale: 0.018,        // üéØ –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–Ω–æ–ø–∫–∞–º
    min: 16,
    max: 26,
    mobileScale: 1.15,
    font: window.THEME?.font,
    style: 'bold'
  },

  // === –î–ò–ê–õ–û–ì–ò ===
  modalTitle: {
    method: 'height',
    scale: 0.038,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.04
    min: 19,
    max: 30,
    mobileScale: 1.1,
    font: window.THEME?.fontTitle,
    color: window.THEME?.colors?.textPrimary || '#FFFFFF',
    style: 'bold',
    autoStroke: true,
    strokeConfig: window.THEME?.strokes?.titleThin
  },

  modalText: {
    method: 'height',
    scale: 0.020,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.022
    min: 13,
    max: 17,
    mobileScale: 1.1,
    font: window.THEME?.font,
    color: window.THEME?.colors?.notificationDesc || '#E8E8E8',
    wordWrap: { widthFactor: 0.85 }
  },

  // === –î–û–°–¢–ò–ñ–ï–ù–ò–Ø ===
  achievementTitle: {
    method: 'height',
    scale: 0.023,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.025
    min: 15,
    max: 20,
    mobileScale: 1.15,
    font: window.THEME?.font,
    color: window.THEME?.colors?.accent || '#FF6B35',
    style: 'bold'
  },

  achievementDesc: {
    method: 'height',
    scale: 0.017,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.018
    min: 11,
    max: 15,
    mobileScale: 1.15,
    font: window.THEME?.font,
    color: window.THEME?.colors?.notificationDesc || '#E8E8E8'
  },

  // === –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===
  notification: {
    method: 'height',
    scale: 0.028,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.03
    min: 17,
    max: 26,
    mobileScale: 1.2,
    font: window.THEME?.font,
    color: window.THEME?.colors?.notificationText || '#FFE066',
    style: 'bold',
    autoShadow: true,
    shadowConfig: window.THEME?.shadows?.title
  },

  countdown: {
    method: 'height',
    scale: 0.055,        // ‚¨áÔ∏è –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.06
    min: 30,
    max: 52,
    mobileScale: 1.1,
    font: window.THEME?.fontTitle,
    color: window.THEME?.colors?.error || '#E74C3C',
    style: 'bold',
    autoStroke: true,
    strokeConfig: window.THEME?.strokes?.titleThick
  },

  // === FALLBACK ===
  default: {
    method: 'height',
    scale: 0.023,
    min: 13,
    max: 19,
    font: window.THEME?.font,
    color: window.THEME?.colors?.textPrimary || '#FFFFFF'
  }
};
